package org.exploit.finja.tests.bitcoincash;

import org.exploit.bch.BitcoinCashProvider;
import org.exploit.btc.constant.AddressType;
import org.exploit.btc.constant.BitcoinNetworkBytes;
import org.exploit.crypto.WIF;
import org.exploit.crypto.key.secp256k1.Secp256k1KeyPair;
import org.exploit.finja.core.constant.NetworkType;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class GeneratorTest {
    private final BitcoinCashProvider provider = BitcoinCashProvider.newBuilder().build();

    @Test
    public void assertValidCashGeneration() {
        var privateKeyDecoded = WIF.recoverKey("KyHjVUu9o9gYR2BTQ21JqAyftvhnwTBX9m5fB6WFt5Sd5MTHcaQp".getBytes(),
                BitcoinNetworkBytes.PRIVATE_KEY_MAINNET);

        var keyPair = Secp256k1KeyPair.create(privateKeyDecoded);

        var generated = provider.generator(NetworkType.MAIN, AddressType.CASH_ADDR).generate(keyPair);

        assertEquals("bitcoincash:qz8r6zedctrf66rc0fg47p0eq9e0uxvazcs63j7gff", generated.publicAddress());
    }
}
