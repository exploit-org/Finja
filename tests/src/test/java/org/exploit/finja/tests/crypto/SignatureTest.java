package org.exploit.finja.tests.crypto;

import org.exploit.crypto.Hash;
import org.exploit.crypto.curve.Ed25519Provider;
import org.exploit.crypto.curve.Secp256k1Provider;
import org.exploit.crypto.schnorr.TaprootSchnorrSigner;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertTrue;

public class SignatureTest {
    @Test
    public void testSchnorr() {
        var signer = new TaprootSchnorrSigner();
        var keyPair = Secp256k1Provider.getInstance().generateKeyPair();

        var message = "Hi, World!".getBytes();
        var hash = Hash.sha256(message);

        var signature = signer.sign(keyPair.privateKey(), hash);
        assertTrue(signer.verify(keyPair.publicKey(), hash, signature));
    }

    @Test
    public void testEcdsa() {
        var keyPair = Secp256k1Provider.getInstance().generateKeyPair();
        var message = "Hi, World!".getBytes();
        var hash = Hash.sha256(message);

        var signature = Secp256k1Provider.getInstance().sign(hash, keyPair);

        assertTrue(Secp256k1Provider.getInstance().verify(hash, signature, keyPair.publicKey()));
    }

    @Test
    public void testEdDsa() {
        var keyPair = Ed25519Provider.getInstance().generateKeyPair();
        var message = "Hi, World!".getBytes();
        var hash = Hash.sha256(message);

        var signature = Ed25519Provider.getInstance().sign(hash, keyPair);

        assertTrue(Ed25519Provider.getInstance().verify(hash, signature, keyPair.publicKey()));
    }
}
