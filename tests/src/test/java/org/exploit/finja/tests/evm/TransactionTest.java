package org.exploit.finja.tests.evm;

import org.exploit.finja.core.constant.AmountUnit;
import org.exploit.finja.core.model.Amount;
import org.exploit.finja.core.model.WebData;
import org.exploit.evm.EvmProvider;
import org.exploit.evm.utils.EthKeys;
import org.exploit.jettyx.auth.HeaderAuth;
import org.junit.jupiter.api.Test;
import org.web3j.utils.Numeric;

import java.math.BigDecimal;
import java.math.BigInteger;

import static org.junit.jupiter.api.Assertions.*;

public class TransactionTest {
    private final EvmProvider provider = EvmProvider.newBuilder()
            .node(WebData.create("https://eth-sepolia.nownodes.io", new HeaderAuth("api-key", System.getenv("NOWNODES_API_KEY"))))
            .chainId(new BigInteger("11155111"))
            .build();

    @Test
    public void transactionTest() {
        var privateKey = EthKeys.getPrivateKey(System.getenv("ETH_PRIVATE_KEY")).encoded();
        var wallet = provider.createWallet(privateKey);

        var amount = new Amount(new BigDecimal("0.00001"), AmountUnit.HUMAN);
        var targetAddress = "0x1cB4A932d90eA229b18B4B42BDFFaF4627f1f38C";

        var testEthTransaction = wallet.transaction(targetAddress, amount);
        assertNotEquals(0L, testEthTransaction.fee());

        var receipt = testEthTransaction.send();
        var txid = receipt.txid();
        assertNotNull(txid);

        var tx = provider.client().getTransaction(txid);
        var value = Numeric.toBigInt(tx.value());

        assertEquals(0, amount.asUnit(provider).compareTo(value));
    }
}
