package org.exploit.finja.tests.tron;

import org.bouncycastle.util.encoders.Hex;
import org.exploit.crypto.key.secp256k1.Secp256k1KeyPair;
import org.exploit.crypto.key.secp256k1.Secp256k1PrivateKey;
import org.exploit.finja.core.model.WebData;
import org.exploit.tron.TronProvider;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class GeneratorTest {
    private final TronProvider provider = TronProvider.newBuilder()
            .node(WebData.create(null, null)) // Mock
            .build();

    @Test
    public void assertValidGeneration() {
        var privateKey = Hex.decode("AF39FB4E79F93EBA8B5B2EC6A12F61402F82CDE13114AEE86F9747DCFD91D841".getBytes());
        var ecPrivateKey = new Secp256k1PrivateKey(privateKey);

        var generated = provider.generator().generate(Secp256k1KeyPair.create(ecPrivateKey));
        assertEquals("TTAoLEaSquVHxQdriPwddGU6eNki8GeJVG", generated.publicAddress());
    }
}
