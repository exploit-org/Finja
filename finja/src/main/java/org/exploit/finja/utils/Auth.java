package org.exploit.finja.utils;

import io.netty.handler.codec.http.HttpHeaders;
import org.exploit.jettyx.auth.*;
import org.exploit.jettyx.core.url.UrlBuilder;

import java.util.Base64;

public final class Auth {
    private Auth() {
    }

    public static String buildUriWithAuth(String url, Authorization auth) {
        var uriBuilder = new UrlBuilder().baseUrl(url);

        if (auth instanceof QueryAuth queryAuth) {
            queryAuth.apply(uriBuilder);
            return uriBuilder.buildString();
        }

        return uriBuilder.buildString();
    }

    public static void applyAuth(HttpHeaders headers, Authorization auth) {
        if (auth instanceof HeaderAuth header)
            headers.add(header.headerName(), header.headerValue());

        if (auth instanceof BearerAuth bearer)
            headers.add("Authorization", bearer.token());

        if (auth instanceof BasicAuth basic) {
            var format = "%s:%s".formatted(basic.userName(), basic.password()).getBytes();
            headers.add("Authorization", Base64.getEncoder().encodeToString(format));
        }
    }
}
