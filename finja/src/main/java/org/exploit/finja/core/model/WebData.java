package org.exploit.finja.core.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import io.github.bucket4j.Bucket;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.exploit.finja.utils.Api;
import org.exploit.jettyx.auth.Authorization;
import org.exploit.jettyx.auth.NoAuth;

@Data
@NoArgsConstructor
@AllArgsConstructor
public class WebData {
    private String httpUrl;
    private String wsUrl;
    private Authorization auth = new NoAuth();

    @JsonIgnore
    private Bucket bucket;

    public static WebData create(String url, String wsUrl, Authorization auth) {
        return new WebData(url, wsUrl, auth, null);
    }

    public static WebData create(String url, String wsUrl, Authorization auth, Bucket bucket) {
        return new WebData(url, wsUrl, auth, bucket);
    }

    public static WebData create(String url, Authorization auth) {
        return new WebData(url, null, auth, null);
    }

    public <T> T newApiClient(Class<T> clazz) {
        return Api.getJettyx().newApiClient(httpUrl, auth, bucket)
                .create(clazz);
    }
}