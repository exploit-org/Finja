package org.exploit.sol.protocol;

import org.exploit.crypto.key.ECPublicKey;
import org.exploit.sol.util.SortedList;

import java.util.List;

public class AccountKeyManager {
    private final SortedList<AccountMeta> accountKeys;

    public AccountKeyManager() {
        this.accountKeys = new SortedList<>();
    }

    public void addAccounts(List<AccountMeta> accounts) {
        this.accountKeys.addAll(accounts);
    }

    public void addAccount(AccountMeta account) {
        this.accountKeys.add(account);
    }

    public List<AccountMeta> getSortedAccountKeys(ECPublicKey feePayer) {
        var feePayerIndex = findAccountIndex(feePayer);

        var newList = accountKeys.getList();
        var feePayerMeta = newList.get(feePayerIndex);

        newList.remove(feePayerIndex);
        newList.add(0, new AccountMeta(feePayerMeta.getPublicKey(), true, true));

        return newList;
    }

    public int findAccountIndex(ECPublicKey key) {
        var list = accountKeys.getList();
        for (var i = 0; i < list.size(); i++) {
            if (list.get(i).getPublicKey().equals(key)) {
                return i;
            }
        }

        throw new RuntimeException("unable to find account index");
    }
}