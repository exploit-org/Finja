package org.exploit.sol.generator;

import org.exploit.crypto.Base58;
import org.exploit.crypto.curve.Ed25519Provider;
import org.exploit.crypto.key.ECKeyPair;
import org.exploit.ed25519.Ed25519PointOps;
import org.exploit.finja.core.AddressGenerator;
import org.exploit.finja.core.constant.Asset;
import org.exploit.finja.core.model.CommonAddress;
import org.exploit.finja.utils.Eraser;
import org.exploit.sodium.ReadOnlyBuffer;

public class SolanaAddressGenerator implements AddressGenerator<Ed25519PointOps> {
    @Override
    public CommonAddress generate() {
        var keyPair = Ed25519Provider.getInstance().generateKeyPair();
        var address = generate(keyPair);

        keyPair.erase();

        return address;
    }

    @Override
    public CommonAddress generate(ECKeyPair<Ed25519PointOps> keyPair) {
        var publicKey = keyPair.publicKey().encoded();
        var privateKey = keyPair.privateKey().toBigInt()
                .toUnsignedByteArray(32);

        var privateKeyBytes = new ReadOnlyBuffer(privateKey);
        Eraser.erase(privateKey);

        return new CommonAddress(Base58.getInstance().encode(publicKey), privateKeyBytes);
    }

    @Override
    public Asset asset() {
        return Asset.SOL;
    }
}
