package org.exploit.sol.generator;

import org.bouncycastle.util.BigIntegers;
import org.exploit.crypto.Base58;
import org.exploit.crypto.curve.Ed25519Provider;
import org.exploit.crypto.key.ECKeyPair;
import org.exploit.crypto.utils.SensitiveBytes;
import org.exploit.finja.core.AddressGenerator;
import org.exploit.finja.core.constant.Asset;
import org.exploit.finja.core.model.CommonAddress;
import org.exploit.finja.utils.Eraser;

public class SolanaAddressGenerator implements AddressGenerator {
    @Override
    public CommonAddress generate() {
        var keyPair = Ed25519Provider.getInstance().generateKeyPair();
        var address = generate(keyPair);

        keyPair.erase();

        return address;
    }

    @Override
    public CommonAddress generate(ECKeyPair keyPair) {
        var publicKey = keyPair.publicKey().encoded();
        var privateKey = BigIntegers.asUnsignedByteArray(keyPair.privateKey().toBigInt());

        var privateKeyBytes = SensitiveBytes.write(privateKey);
        Eraser.erase(privateKey);

        return new CommonAddress(Base58.getInstance().encode(publicKey), privateKeyBytes);
    }

    @Override
    public Asset asset() {
        return Asset.SOL;
    }
}
