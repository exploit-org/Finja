package org.exploit.tron.converter;

import org.exploit.finja.core.SmartValueConverter;
import org.exploit.finja.core.ValueConverter;
import org.exploit.finja.core.converter.MathConstantConverter;
import org.exploit.tron.api.rest.TronClient;

import java.math.BigDecimal;
import java.math.BigInteger;

public class TronConverter extends MathConstantConverter implements SmartValueConverter {
    private final TronClient tronClient;

    public TronConverter(TronClient tronClient) {
        super(6);
        this.tronClient = tronClient;
    }

    @Override
    public BigInteger toUnit(BigDecimal amount, String contractAddress) {
        return converterFor(contractAddress).toUnit(amount);
    }

    @Override
    public BigDecimal toHuman(BigInteger amount, String contractAddress) {
        return converterFor(contractAddress).toHuman(amount);
    }

    private ValueConverter converterFor(String contractAddress) {
        return new MathConstantConverter(tronClient.decimals(contractAddress).intValue());
    }
}
