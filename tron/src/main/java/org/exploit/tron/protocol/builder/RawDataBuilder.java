package org.exploit.tron.protocol.builder;

import org.exploit.tron.protocol.transaction.Contract;
import org.exploit.tron.protocol.transaction.RawData;

import java.util.ArrayList;
import java.util.List;

public class RawDataBuilder {
    private List<Contract> contracts = new ArrayList<>();
    private String refBlockBytes;
    private String refBlockHash;
    private long expiration;
    private long feeLimit;
    private long timestamp;

    public RawDataBuilder contract(List<Contract> contract) {
        this.contracts = contract;
        return this;
    }

    public RawDataBuilder addContract(Contract contract) {
        this.contracts.add(contract);
        return this;
    }

    public RawDataBuilder removeContract(int i) {
        contracts.remove(i);
        return this;
    }

    public RawDataBuilder refBlockBytes(String refBlockBytes) {
        this.refBlockBytes = refBlockBytes;
        return this;
    }

    public RawDataBuilder refBlockHash(String refBlockHash) {
        this.refBlockHash = refBlockHash;
        return this;
    }

    public RawDataBuilder expiration(long expiration) {
        this.expiration = expiration;
        return this;
    }

    public RawDataBuilder feeLimit(long feeLimit) {
        this.feeLimit = feeLimit;
        return this;
    }

    public RawDataBuilder timestamp(long timestamp) {
        this.timestamp = timestamp;
        return this;
    }

    public RawData build() {
        return new RawData(contracts, refBlockBytes, refBlockHash, expiration, feeLimit, timestamp);
    }
}