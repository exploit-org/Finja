package org.exploit.tron.protocol.transaction;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.exploit.finja.core.contract.transaction.SmartTransaction;
import org.exploit.tron.protocol.builder.TransactionBuilder;
import org.exploit.tron.stereotype.TrxTransaction;

import java.util.ArrayList;
import java.util.List;

@Data
@NoArgsConstructor
@AllArgsConstructor
@JsonIgnoreProperties(ignoreUnknown = true)
public class Transaction implements TrxTransaction, SmartTransaction {
    private boolean visible = false;
    private List<Ret> ret = new ArrayList<>();
    private List<String> signature = new ArrayList<>();
    private String txID = "";

    private long blockNumber = 0;
    @JsonProperty("raw_data")
    private RawData rawData = null;
    @JsonProperty("raw_data_hex")
    private String rawDataHex = null;

    @JsonIgnore
    private long fee = 0L;

    public List<Ret> ret() {
        return ret;
    }

    public List<String> signature() {
        return signature;
    }

    public String txID() {
        return txID;
    }

    public long blockNumber() {
        return blockNumber;
    }

    public RawData rawData() {
        return rawData;
    }

    public String rawDataHex() {
        return rawDataHex;
    }

    public static TransactionBuilder newBuilder() {
        return new TransactionBuilder();
    }
}
