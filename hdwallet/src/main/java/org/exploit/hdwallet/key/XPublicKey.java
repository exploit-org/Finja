package org.exploit.hdwallet.key;

import org.exploit.crypto.key.ECPublicKey;
import org.exploit.finja.stereotype.Sensitive;
import org.exploit.hdwallet.utils.MasterKeys;

public abstract class XPublicKey implements Sensitive {
    private final ECPublicKey publicKey;
    private final byte[] chainCode;
    private final byte[] parentFingerPrint;
    private final int depth;
    private final int index;

    public XPublicKey(ECPublicKey publicKey, byte[] chainCode, byte[] parentFingerPrint, int depth, int index) {
        this.publicKey = publicKey;
        this.chainCode = chainCode;
        this.parentFingerPrint = parentFingerPrint;
        this.depth = depth;
        this.index = index;
    }

    public ECPublicKey asECPublicKey() {
        return publicKey;
    }

    public byte[] chainCode() {
        return chainCode;
    }

    public byte[] parentFingerPrint() {
        return parentFingerPrint;
    }

    public int depth() {
        return depth;
    }

    public int index() {
        return index;
    }

    public String toBase58(byte[] version) {
        var keyData = publicKey.compress();
        return MasterKeys.toBase58(version, depth, parentFingerPrint, index, chainCode, keyData);
    }

    @Override
    public void erase() {
        publicKey.erase();
    }
}