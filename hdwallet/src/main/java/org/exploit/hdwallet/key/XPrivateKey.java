package org.exploit.hdwallet.key;

import org.exploit.crypto.key.ECPrivateKey;
import org.exploit.finja.stereotype.Sensitive;
import org.exploit.finja.utils.Eraser;
import org.exploit.hdwallet.utils.MasterKeys;

public abstract class XPrivateKey implements Sensitive {
    private final ECPrivateKey privateKey;
    private final byte[] chainCode;
    private final byte[] parentFingerPrint;
    private final int depth;
    private final int index;

    public XPrivateKey(ECPrivateKey privateKey, byte[] chainCode, byte[] parentFingerPrint, int depth, int index) {
        this.privateKey = privateKey;
        this.chainCode = chainCode;
        this.parentFingerPrint = parentFingerPrint;
        this.depth = depth;
        this.index = index;
    }

    public ECPrivateKey asECPrivateKey() {
        return privateKey;
    }

    public byte[] chainCode() {
        return chainCode;
    }

    public byte[] parentFingerPrint() {
        return parentFingerPrint;
    }

    public int depth() {
        return depth;
    }

    public int index() {
        return index;
    }

    public String toBase58(byte[] version) {
        return privateKey.encoded().read(bytes -> {
            var keyData = new byte[bytes.length + 1];
            keyData[0] = 0x00;
            System.arraycopy(bytes, 0, keyData, 1, bytes.length);

            return MasterKeys.toBase58(version, depth, parentFingerPrint, index, chainCode, keyData);
        });
    }

    @Override
    public void erase() {
        privateKey.erase();
        Eraser.erase(chainCode);
        Eraser.erase(parentFingerPrint);
    }
}