package org.exploit.hdwallet.utils;

import org.exploit.hdwallet.exception.SeedCreateException;
import org.exploit.hdwallet.model.Mnemonic;
import org.exploit.hdwallet.model.Seed;

import javax.crypto.SecretKeyFactory;
import javax.crypto.spec.PBEKeySpec;

public final class Seeds {
    private Seeds() {
    }

    private static final String PBKDF2_ALGORITHM = "PBKDF2WithHmacSHA512";
    private static final int PBKDF2_ITERATIONS = 2048;
    private static final int PBKDF2_KEY_LENGTH = 512;

    public static Seed create(char[] mnemonic, String password) {
        byte[] salt = ("mnemonic" + password).getBytes();

        var spec = new PBEKeySpec(mnemonic, salt, PBKDF2_ITERATIONS, PBKDF2_KEY_LENGTH);
        try {
            var skf = SecretKeyFactory.getInstance(PBKDF2_ALGORITHM);

            return new Seed(skf.generateSecret(spec).getEncoded());
        } catch (Exception e) {
            throw new SeedCreateException(e);
        }
    }

    public static Seed create(char[] mnemonic) {
        return create(mnemonic, "");
    }

    public static Seed create(Mnemonic mnemonic, String password) {
        return create(mnemonic.value(), password);
    }

    public static Seed create(Mnemonic mnemonic) {
        return create(mnemonic.value());
    }
}