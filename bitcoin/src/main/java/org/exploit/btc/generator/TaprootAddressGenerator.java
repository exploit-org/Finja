package org.exploit.btc.generator;

import lombok.RequiredArgsConstructor;
import org.exploit.btc.utils.Witness;
import org.exploit.crypto.curve.Secp256k1Provider;
import org.exploit.crypto.key.ECPublicKey;
import org.exploit.crypto.key.secp256k1.Secp256k1PublicKey;
import org.exploit.finja.core.constant.Asset;
import org.exploit.finja.core.model.CommonAddress;

@RequiredArgsConstructor
public class TaprootAddressGenerator implements BitcoinAddressGenerator {
    private final Asset asset;
    private final String hrp;

    @Override
    public String encodePublicAddress(ECPublicKey publicKey) {
        var secp256k1PublicKey = (Secp256k1PublicKey) publicKey;
        return Witness.encode((byte) 1, hrp, secp256k1PublicKey.tweak(new byte[0]).encoded());
    }

    @Override
    public CommonAddress generate() {
        var keyPair = Secp256k1Provider.getInstance().generateKeyPair();
        return generate(keyPair);
    }

    @Override
    public Asset asset() {
        return asset;
    }
}
