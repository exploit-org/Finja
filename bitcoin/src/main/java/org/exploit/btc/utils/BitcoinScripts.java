package org.exploit.btc.utils;

import org.exploit.btc.protocol.script.*;
import org.exploit.crypto.Bech32;

public class BitcoinScripts {
    private BitcoinScripts() {
    }

    public static final P2PKHScript P2PKH = new P2PKHScript();
    public static final P2WPKHScript P2WPKH = new P2WPKHScript();
    public static final P2SHScript P2SH = new P2SHScript();
    public static final P2WSHScript P2WSH = new P2WSHScript();
    public static final P2TRScript P2TR = new P2TRScript();

    public static BitcoinScript resolveWitness(String address) {
        var decoded = Bech32.decode(address);
        var program = Witness.decode(address);

        var version = decoded.data()[0];

        if (version == 0 && program.length == 20) {
            return BitcoinScripts.P2WPKH;
        } else if (version == 0 && program.length == 32) {
            return BitcoinScripts.P2WSH;
        } else if (version == 1 && program.length == 32) {
            return BitcoinScripts.P2TR;
        } else {
            throw new IllegalArgumentException("Invalid address: " + address);
        }
    }
}