package org.exploit.crypto.curve;

import org.exploit.crypto.constant.SupportedCurve;
import org.exploit.crypto.key.ECKeyPair;
import org.exploit.crypto.key.ECPrivateKey;
import org.exploit.crypto.key.ECPublicKey;
import org.exploit.crypto.schnorr.TaprootSchnorrSigner;
import org.exploit.crypto.signature.Signature;

public interface CurveProvider {
    ECKeyPair generateKeyPair();

    Signature sign(byte[] data, ECKeyPair keyPair);

    boolean verify(byte[] data, Signature signature, ECPublicKey publicKey);

    boolean isValidPublicKey(byte[] key);

    default boolean isValidKeyPair(ECPublicKey publicKey, ECPrivateKey privateKey) {
        return getPublicKey(privateKey).hex().equals(publicKey.hex());
    }

    TaprootSchnorrSigner schnorr();

    ECPublicKey getPublicKey(ECPrivateKey privateKey);

    SupportedCurve type();
}