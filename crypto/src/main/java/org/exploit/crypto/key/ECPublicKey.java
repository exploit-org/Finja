package org.exploit.crypto.key;

import org.exploit.crypto.Base58;
import org.exploit.crypto.stereotype.Sensitive;
import org.exploit.tss.curve.PointOps;

import java.math.BigInteger;

public interface ECPublicKey<P extends PointOps<P>> extends Sensitive {
    byte[] compress();

    byte[] encoded();

    BigInteger toBigInt();

    String hex();

    P point();

    default String toBase58(boolean compress) {
        return Base58.getInstance().encode(compress ? compress() : encoded());
    }

    Class<P> pointOpsClass();

    byte[] prepareNonHardenedData(int childIndex);
}