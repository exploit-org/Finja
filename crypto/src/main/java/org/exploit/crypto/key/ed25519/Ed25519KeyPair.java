package org.exploit.crypto.key.ed25519;

import org.exploit.crypto.curve.Ed25519Provider;
import org.exploit.crypto.key.ECKeyPair;
import org.exploit.crypto.key.ECPrivateKey;
import org.exploit.crypto.key.ECPublicKey;
import org.exploit.ed25519.Ed25519PointOps;

import java.util.Objects;

public class Ed25519KeyPair implements ECKeyPair<Ed25519PointOps> {
    private final Ed25519PrivateKey privateKey;
    private final Ed25519PublicKey publicKey;

    public Ed25519KeyPair(Ed25519PrivateKey privateKey, Ed25519PublicKey publicKey) {
        this.privateKey = privateKey;
        this.publicKey = publicKey;
    }

    @Override
    public ECPrivateKey privateKey() {
        return privateKey;
    }

    @Override
    public ECPublicKey<Ed25519PointOps> publicKey() {
        return publicKey;
    }

    @Override
    public boolean equals(final Object other) {
        if (!(other instanceof Ed25519KeyPair that)) {
            return false;
        }

        return Objects.equals(privateKey, that.privateKey) && publicKey.equals(that.publicKey);
    }

    @Override
    public void erase() {
        publicKey.erase();
        privateKey.erase();
    }

    public static Ed25519KeyPair create(Ed25519PrivateKey privateKey) {
        var publicKey = (Ed25519PublicKey) Ed25519Provider.getInstance().getPublicKey(privateKey);

        return new Ed25519KeyPair(privateKey, publicKey);
    }
}