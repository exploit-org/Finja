package org.exploit.evm.utils;

import org.bouncycastle.util.encoders.Hex;
import org.exploit.crypto.Hash;
import org.exploit.crypto.key.ECPublicKey;
import org.exploit.crypto.key.secp256k1.Secp256k1PrivateKey;
import org.exploit.finja.utils.SensitiveBytes;

import java.util.Arrays;

public final class EthKeys {
    private EthKeys() {
    }

    public static byte[] getAddress(byte[] publicKey) {
        var noPrefixKey = Arrays.copyOfRange(publicKey, 1, publicKey.length);
        var hash = Hash.keccak256(noPrefixKey);

        return Arrays.copyOfRange(hash, hash.length - 20, hash.length);
    }

    public static Secp256k1PrivateKey getPrivateKey(String hex) {
        var bytes = Hex.decode(hex.startsWith("0x") ? hex.substring(2) : hex);

        return new Secp256k1PrivateKey(SensitiveBytes.write(bytes));
    }

    public static String getAddress(ECPublicKey publicKey) {
        return Hex.toHexString(getAddress(publicKey.encoded()));
    }
}